from
(select distinct
teamid as team_id,
season
from
bpi_tourney
union
select distinct
opp as team_id,
season
from
bpi_tourney)
order by
1,2
')
68*3
matchups <- sqldf('
select
a.season,
a.team_id as teamid,
b.team_id as opp
from
teams as a,
teams as b
where
a.season = b.season
and a.team_id < b.team_id')
67*68*2/3
67*68*3/2
matchups$id <- paste(matchups$season,
matchups$teamid,
matchups$opp,
sep = "_")
## bring in bpi info
matchups2 <- sqldf('
select
a.id,
a.season,
a.teamid,
a.opp,
b.team_bpi
from
matchups as a,
bpi_tourney as b
where
a.teamid = b.teamid
and a.season = b.season')
head(matchups)
head(matchups2)
matchups[c(1:20),]
matchups2[c(1:20),]
matchups[c(6800:6834),]
matchups2[c(9100:9130),]
head(bpi_tourney)
bpi_teams <- sqldf('
select distinct
season,
teamid,
bpi
from
(select distinct
season,
teamid,
team_bpi as bpi
from
bpi_tourney
union
select distinct
season,
opp as teamid,
opp_bpi as bpi
from
bpi_tourney)
')
matchups2 <- sqldf('
select
a.id,
a.season,
a.teamid,
a.opp,
b.team_bpi
from
matchups as a,
bpi_teams as b
where
a.teamid = b.teamid
and a.season = b.season')
matchups2 <- sqldf('
select
a.id,
a.season,
a.teamid,
a.opp,
b.bpi as team_bpi
from
matchups as a,
bpi_teams as b
where
a.teamid = b.teamid
and a.season = b.season')
head(matchups2)
matchups3 <- sqldf('
select
a.*,
b.bpi as opp_bpi
from
matchups2 as a,
bpi_teams as b
where
a.opp = b.opp
and a.season = b.season')
matchups3 <- sqldf('
select
a.*,
b.bpi as opp_bpi
from
matchups2 as a,
bpi_teams as b
where
a.opp = b.teamid
and a.season = b.season')
matchups4 <- matchups3 %>%
mutate(pred = exp(0.08731827*(team_bpi-opp_bpi))/(1+exp(0.08731827*(team_bpi-opp_bpi)))) %>%
select(id,pred)
head(matchups4)
tourney_results <- read.csv("tourney_compact_results.csv",header=TRUE,stringsAsFactors=FALSE)
head(tourney_results)
for(i in 1:dim(tourney_results)[1]){
tourney_results$gameid[i] <- paste(tourney_results$season[i],
min(tourney_results$wteam[i],tourney_results$lteam[i]),
max(tourney_results$wteam[i],tourney_results$lteam[i]),
sep="_")
if(tourney_results$wteam[i] < tourney_results$lteam[i]){
tourney_results$teamid[i] <- tourney_results$wteam[i]
tourney_results$opp[i] <- tourney_results$lteam[i]
tourney_results$win[i] <- 1
}
else{
tourney_results$teamid[i] <- tourney_results$lteam[i]
tourney_results$opp[i] <- tourney_results$wteam[i]
tourney_results$win[i] <- 0
}
}
head(tourney_results)
tourney_2011 <- select(tourney_results,season,gameid,teamid,opp,win) %>%
filter(season == 2011) %>%
select(season,teamid,opp)
teams_2011 <- teams <- sqldf('
select distinct
season,
team_id
from
(select distinct
teamid as team_id,
season
from
tourney_2011
union
select distinct
opp as team_id,
season
from
tourney_2011)
order by
1,2
')
matchups_2011 <- sqldf('
select
a.season,
a.team_id as teamid,
b.team_id as opp,
0.5 as pred
from
teams as a,
teams as b
where
a.season = b.season
and a.team_id < b.team_id')
matchups_2011$id <- paste(matchups_2011$season,
matchups_2011$teamid,
matchups_2011$opp,
sep = '_')
matchups_2011 <- matchups_2011 %>%
select(id,pred)
##################################
## Union the two files together ##
##################################
submission1 <- sqldf('
select
*
from
matchups_2011
union
select
*
from
matchups4')
67*68*4/2
head(submission1)
setwd("/home/john/Kaggle/Machine Learning Mania 2015/kaggle data")
tourney_results <- read.csv("tourney_compact_results.csv",header=TRUE,stringsAsFactors=FALSE)
head(tourney_results)
tourney_seeds <- read.csv("tourney_seeds.csv",header=TRUE,stringsAsFactors=FALSE)
head(tourney_seeds)
library(sqldf)
library(dplyr)
library(stringr)
tourney_seeds$seed2 <- str_sub(tourney_seeds$seed,2,3)
head(tourney_seeds)
as.numeric('01')
as.numeric('16')
head(tourney_results)
head(tourney_seeeds)
head(tourney_seeds)
results_seeds <- sqldf('
select
a.season,
a.wteam,
a.lteam,
b.seed2 as wseed
from
tourney_results as a,
tourney_seeds as b
where
a.season = b.season
and a.wteam = b.team')
View(results_seeds)
results_seeds2 <- sqldf('
select
a.season,
a.wteam,
a.lteam,
b.seed2 as lseed
from
results_seeds as a,
tourney_seeds as b
where
a.season = b.season
and a.lteam = b.team')
View(results_seeds2)
results_seeds2 <- sqldf('
select
a.season,
a.wteam,
a.lteam,
a.wseed,
b.seed2 as lseed
from
results_seeds as a,
tourney_seeds as b
where
a.season = b.season
and a.lteam = b.team')
View(results_seeds2)
results_seeds2$matchup <- ifelse(as.numeric(results_seeds2$wseed) < as.numeric(results_seeds2$lseed),
paste(results_seeds2$wseed,results_seeds2$lseed),
paste(results_seeds2$lseed,results_seeds2$wseed))
head(results_seed2)
head(results_seeds2)
results_seeds2$matchup <- ifelse(as.numeric(results_seeds2$wseed) < as.numeric(results_seeds2$lseed),
paste(results_seeds2$wseed,results_seeds2$lseed,sep = "-"),
paste(results_seeds2$lseed,results_seeds2$wseed,sep = "-"))
head(results_seeds2)
matchups <- results_seeds2 %>%
group_by(matchup,wseed) %>%
summarise(wins = n())
head(matchups)
2014-1985
matchups
View(matchups)
2014-195
2014-1985
29*4
summarise(tourney_results)
summary(trouney_results)
summary(tourney_results)
matchups <- results_seeds2 %>%
group_by(matchup,wseed,lseed) %>%
summarise(counts = n())
View(matchups)
totals <- results_seeds2 %>%
group_by(matchup) %>%
summarise(count = n())
View(totals)
colnames(matchups)
colnames(totals)
matchup_probs <- sqldf('
select
a.*,
b.count,
a.counts/b.count as wprob
from
matchups as a,
totals as b
where
a.matchup = b.matchup')
View(matchup_probs)
matchup_probs$wprob
mutate(matchup_probs,wprob = counts/count)
View(matchup_probs)
matchup_probs <- mutate(matchup_probs,wprob = counts/count)
View(matchup_probs)
matchup_probs <- sqldf('
select
a.*,
b.count
from
matchups as a,
totals as b
where
a.matchup = b.matchup')
matchup_probs2 <- mutate(matchup_probs,
wprob = counts/count,
team = wseed,
opp = lseed) %>%
select(matchup,
team,
opp,
wprob)
View(matchup_probs2)
View(matchup_probs2)
str(matchup_probs2)
m <- character(0)
t <- character(0)
o <- character(0)
p <- character(0)
p <- numeric(0)
m
m[1] <- "01-01"
m
m[2] <- "02-05"
m
m <- character(0)
t <- character(0)
o <- character(0)
p <- numeric(0)
m <- character(0) #matchup
t <- character(0) #team
o <- character(0) #opponent
p <- numeric(0)   #winprob
j <- 1            #index
rows_to_append <-data.frame()
for(i in 1:dim(matchup_probs2[1])){
if(matchup_probs2$wprob[i] == 1){
if(matchup_probs$team[i] == matchup_probs$opp[i]){
matchup_probs$wprob[i] <- 0.5
}
else{
m[j] <- matchup_probs2$matchup[i]
t[j] <- matchup_probs2$opp[i]
o[j] <- matchup_probs2$team[i]
p[j] <- 0
j <- j+1
}
}
}
dim(matchup_probs2)
dim(matchup_probs2)[1]
m <- character(0) #matchup
t <- character(0) #team
o <- character(0) #opponent
p <- numeric(0)   #winprob
j <- 1            #index
for(i in 1:dim(matchup_probs2)[1]){
if(matchup_probs2$wprob[i] == 1){
if(matchup_probs$team[i] == matchup_probs$opp[i]){
matchup_probs$wprob[i] <- 0.5
}
else{
m[j] <- matchup_probs2$matchup[i]
t[j] <- matchup_probs2$opp[i]
o[j] <- matchup_probs2$team[i]
p[j] <- 0
j <- j+1
}
}
}
i
matchup_probs$team[1] == matchup_probs$opp[1]
for(i in 1:dim(matchup_probs2)[1]){
if(matchup_probs2$wprob[i] == 1){
if(matchup_probs2$team[i] == matchup_probs2$opp[i]){
matchup_probs2$wprob[i] <- 0.5
}
else{
m[j] <- matchup_probs2$matchup[i]
t[j] <- matchup_probs2$opp[i]
o[j] <- matchup_probs2$team[i]
p[j] <- 0
j <- j+1
}
}
}
m
t
o
p
rows_to_append <- cbind(m,t,o,p)
rows_to_append <- data.frame(cbind(m,t,o,p))
probs_final <- rbind(matchup_probs2,rows_to_append)
rows_to_append
colnames(matchup_probs2)
colnames(rows_to_append)
colnames(rows_to_append) <- c("matchup","team","opp","wprob")
probs_final <- rbind(matchup_probs2,rows_to_append)
probs_final
View(probs_final)
seeds <- c("01","02","03","04","05","06","07","08","09","10","11","12","13","14","15","16")
seeds
seeds <- data.frame(c("01","02","03","04","05","06","07","08","09","10","11","12","13","14","15","16"))
colnames(seeds) <- "seed"
seeds
str(seeds)
seeds <- data.frame(c("01","02","03","04","05","06","07","08","09","10","11","12","13","14","15","16"),
stringsAsFactors = FALSE)
str(seeds)
seeds_cart_product <- sqldf('
select
a.seed as team,
b.seed as opp
from
seeds as a,
seeds as b
')
colnames(seeds)
colnames(seeds) <- "seed"
colnames(seeds)
seeds_cart_product <- sqldf('
select
a.seed as team,
b.seed as opp
from
seeds as a,
seeds as b
')
seeds_cart_product <- sqldf('
select
a.seed as team,
b.seed as opp
from
seeds as a,
seeds as b
')
View(seeds_cart_product)
matchup_probs <- sqldf('
select
a.*,
b.wprob
from
seeds_cart_product as a,
probs_final as b
where
a.team = b.team
and a.opp = b.opp')
matchup_probs
matchup_probs_final <- sqldf('
select
a.*,
b.wprob
from
seeds_cart_product as a,
probs_final as b
where
a.team = b.team
and a.opp = b.opp')
View(matchup_probs_final)
matchup_probs_final <- sqldf('
select
a.*,
b.wprob
from
seeds_cart_product as a
left join
probs_final as b
where
a.team = b.team
and a.opp = b.opp')
View(matchup_probs_final)
matchup_probs_final <- sqldf('
select
a.*,
b.wprob
from
seeds_cart_product as a
left join
probs_final as b
on
a.team = b.team
and a.opp = b.opp')
View(matchup_probs_final)
for(k in 1:dim(matchup_probs_final)[1]){
if(is.na(matchup_probs_final$wprob)){
matchup_probs_final$wprob <- 0.5
}
}
matchup_probs_final <- sqldf('
select
a.*,
b.wprob
from
seeds_cart_product as a
left join
probs_final as b
on
a.team = b.team
and a.opp = b.opp')
for(k in 1:dim(matchup_probs_final)[1]){
if(is.na(matchup_probs_final$wprob[k])){
matchup_probs_final$wprob[k] <- 0.5
}
}
View(matchup_probs_final)
